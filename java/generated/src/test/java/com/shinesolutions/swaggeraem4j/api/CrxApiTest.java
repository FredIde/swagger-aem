/*
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * OpenAPI spec version: 1.1.1
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.shinesolutions.swaggeraem4j.api;

import com.shinesolutions.swaggeraem4j.ApiException;
import java.io.File;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CrxApi
 */
public class CrxApiTest {

    private final CrxApi api = new CrxApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postPackageServiceTest() throws ApiException {
        String cmd = null;
        // String response = api.postPackageService(cmd);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postPackageServiceJsonTest() throws ApiException {
        String path = null;
        String cmd = null;
        String groupName = null;
        String packageName = null;
        String packageVersion = null;
        String charset_ = null;
        Boolean force = null;
        File _package = null;
        // String response = api.postPackageServiceJson(path, cmd, groupName, packageName, packageVersion, charset_, force, _package);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postPackageUpdateTest() throws ApiException {
        String groupName = null;
        String packageName = null;
        String version = null;
        String path = null;
        String filter = null;
        String charset_ = null;
        // String response = api.postPackageUpdate(groupName, packageName, version, path, filter, charset_);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postSetPasswordTest() throws ApiException {
        String old = null;
        String plain = null;
        String verify = null;
        // api.postSetPassword(old, plain, verify);

        // TODO: test validations
    }
    
}
